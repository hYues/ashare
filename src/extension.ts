import * as vscode from "vscode";
import { get } from "./utils/useAxios";
import { EastmoneyStockRes } from "./types/app";

/** Ëé∑ÂèñÈÖçÁΩÆÊï∞ÊçÆ */
const getConfig = () => {
  const config = vscode.workspace.getConfiguration("ashare");
  const options = {
    stock: config.get("stock", "SH000001"),
    code: "000001",
    market: 1, // 0-Ê∑±Â∏ÇÔºõ1-Ê≤™Â∏Ç
    height: config.get("picHeight", 578),
    date: Date.now(),
  };

  if (options.stock.toLowerCase().startsWith("sz")) {
    options.market = 0;
  }

  const code = options.stock.match(/\d+/);
  if (code && code.length) {
    options.code = code[0];
  }
  return options;
};

/** ÁîüÊàê Markdown Ê†ºÂºèÁöÑÊñáÊú¨*/
const createMarkdownString = () => {
  const markdownStr = new vscode.MarkdownString();
  markdownStr.supportHtml = true;
  markdownStr.appendMarkdown(getStockPic());
  return markdownStr;
};

/** Ëé∑ÂèñËÇ°Á•®‰ªäÊó•Ëµ∞ÂäøÂõæ */
const getStockPic = () => {
  const config = getConfig();
  return `<img src="https://webquotepic.eastmoney.com/GetPic.aspx?imageType=r&nid=${config.market}.${config.code}&timespan=${config.date}" width=${config.height}/>`;
};

/** Ëé∑ÂèñËÇ°Á•®‰ªäÊó•Êï∞ÊçÆ */
const getStockData = async () => {
  const config = getConfig();
  await get(
    `https://push2.eastmoney.com/api/qt/stock/get?secid=${config.market}.${config.code}`
  )
    .then((res: unknown) => {
      if (res) {
        const { data } = res as EastmoneyStockRes;
        if (data) {
          const name = data.f58;
          const code = data.f57;
          const currentPrice = data.f43 / 100;
          const maxPrice = data.f44 / 100;
          const minPrice = data.f45 / 100;
          const startAt = data.f46 / 100;
          const lastAt = data.f60 / 100;
          const priceCompre = startAt >= lastAt ? "üìà" : "üìâ";

          vscode.window.showInformationMessage(
            `${name} [${code}] ${priceCompre} Êò®Êî∂Ôºö${lastAt}Ôºå‰ªäÂºÄÔºö${startAt} üì¢`,
            `üìå ÊúÄÊñ∞Ôºö${currentPrice}`,
            `ÊúÄÈ´òÔºö${maxPrice}`,
            `ÊúÄ‰ΩéÔºö${minPrice}`
          ).then(() => {});
        }
      }
    })
    .catch((err) => {
      vscode.window.showInformationMessage(
        `ËØ∑Ê±ÇÊï∞ÊçÆÂ§±Ë¥•ÔºåËØ∑Á®çÂÄôÈáçËØï üëÄ`
      ).then(() => {});
    });
};

/** ÂàõÂª∫ËÇ°Á•®Áä∂ÊÄÅÊ†è */
const createCustomStatusBar = () => {
  // ÂàõÂª∫Áä∂ÊÄÅÊ†èÈ°π
  const statusBarItem = vscode.window.createStatusBarItem(
    vscode.StatusBarAlignment.Left
  );

  statusBarItem.text = "$(graph-line) Ashare";
  statusBarItem.tooltip = createMarkdownString();
  statusBarItem.show();
  statusBarItem.command = "ashare.now";

  return statusBarItem;
};

// ÊøÄÊ¥ª
export function activate(context: vscode.ExtensionContext) {
  const statusBarItem = createCustomStatusBar();
  context.subscriptions.push(
    // ÁõëÂê¨ÈÖçÁΩÆÂèòÂä®
    vscode.workspace.onDidChangeConfiguration(() => {
      statusBarItem.tooltip = createMarkdownString();
    }),
    // Ê≥®ÂÜåÂëΩ‰ª§
    vscode.commands.registerCommand("ashare.now", async () => {
      await getStockData();
    })
  );
}

// Âç∏ËΩΩ
export function deactivate() {}
